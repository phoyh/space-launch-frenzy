subroutine Interaktion_Nachfrage()
	neue_NachfrageAnzahl = 1
	if Nachfrage_Anzahl > 0 then
		for ni = 0 to Nachfrage_Anzahl - 1
			if Nachfrage_SiegGebot[ni] <> 0 then
				neue_NachfrageAnzahl++
			endif
		next ni
	endif
	Nachfrage_Anzahl = neue_NachfrageAnzahl
	if Nachfrage_Anzahl > NACHFRAGE_MAX_ANZAHL then
		Nachfrage_Anzahl = NACHFRAGE_MAX_ANZAHL
	endif
	for ni = 0 to Nachfrage_Anzahl - 1
		nai = int(rand * Nachfrageart_Anzahl)
		Nachfrage_ArtIndex[ni] = nai
		call Interaktion_Auktion(ni)
	next ni
end subroutine

subroutine Interaktion_Auktion(ni)
	nai = Nachfrage_ArtIndex[ni]
	gebot = Nachfrageart_Anfangsgebot[nai]
	aktuellGebotSpielerIndex = -1
	uebrigeTicks = 1
	while uebrigeTicks > 0
		uebrigeTicks = GEBOT_MAXZEIT / 0.1
		call Interaktion_GebotUebersicht(nai)
		print
		if aktuellGebotSpielerIndex = -1 then
			print "Anfangsgebot: ";
		else
			print Spieler_Name$[aktuellGebotSpielerIndex] + " Gebot: ";
		endif
		print "" + gebot + "M"
		if aktuellGebotSpielerIndex = -1 then
			print
			istZuTeuer = true
			for spi = 0 to Spieler_Anzahl - 1
				if Modell_Kosten(spi, nai) <= Spieler_Geld[spi] then
					istZuTeuer = false
				endif
			next spi
			if istZuTeuer then
				input "Keiner kann eine Rakete zum Start bringen...", a$
				uebrigeTicks = 0
			else
				input "Bei Return geht's los", a$
				print "...Start!";
			endif
		endif
		gebotSpielerIndex = -1
		while gebotSpielerIndex = -1 and uebrigeTicks > 0
			pause 0.1
			a = key
			gebotSpielerIndex = Spieler_IndexFuerKey(a)
			if aktuellGebotSpielerIndex = gebotSpielerIndex then
				gebotSpielerIndex = -1
			endif
			if gebotSpielerIndex <> -1 then
				if Spieler_Geld[gebotSpielerIndex] < Modell_Kosten(gebotSpielerIndex, nai) then
					gebotSpielerIndex = -1
				endif
			endif
			uebrigeTicks--
			if uebrigeTicks % 10 = 0 then
				print "..." + (uebrigeTicks / 10);
			endif
		end while
		if gebotSpielerIndex <> -1 then
			aktuellGebotSpielerIndex = gebotSpielerIndex
			gebot -= GEBOT_INTERVALL
		endif
	end while
	Nachfrage_SpielerIndex[ni] = aktuellGebotSpielerIndex
	if aktuellGebotSpielerIndex <> -1 then 
		Nachfrage_SiegGebot[ni] = gebot
		Spieler_Geld[aktuellGebotSpielerIndex] -= Modell_Kosten(aktuellGebotSpielerIndex, nai)
	else
		Nachfrage_SiegGebot[ni] = 0
	endif
end subroutine

subroutine Interaktion_GebotUebersicht(nai)
	cls
	print "Nachfrage " + Nachfrageart_Name$[nai]
	print "====================="
	print
	for spi = 0 to Spieler_Anzahl - 1
		print "Erf. ";
		print Technik_Prozent$(Modell_Zuverlaessigkeit(spi, nai));
		print " / Wdv. "; 
		print Technik_Prozent$(Modell_Wiederverwendbarkeit(spi, nai));
		print " - "; 
		print "Kosten " + Modell_Kosten(spi, nai) + "M - ";
		print "Geld " + Spieler_Geld[spi] + "M";
		print " ..." + Spieler_Name$[spi] 
	next spi
end subroutine

rem =============================================

subroutine Interaktion_Auftragdurchfuehrung()
	for ni = 0 to Nachfrage_Anzahl - 1
		spi = Nachfrage_SpielerIndex[ni]
		if spi <> -1 then
			nai = Nachfrage_ArtIndex[ni]
			zuverlaessigkeit = Modell_Zuverlaessigkeit(spi, nai)
			wiederverwendbarkeit = Modell_Wiederverwendbarkeit(spi, nai)
			kosten = Modell_Kosten(spi, nai)
			reuseWert = int(kosten * RAKETE_REUSE_WERT)
			gebot = Nachfrage_SiegGebot[ni]
			cls
			print Spieler_Name$[spi] + " bereitet Start von " + Nachfrageart_Name$[nai] + " vor..."
			call Technik_Echo("Vorbereitung kostet " + kosten + "M")
			call Technik_Echo("Die Rakete startet...")
			if rand > zuverlaessigkeit then
				call Technik_Echo("Rakete ist explodiert...")
				call Technik_Echo("Strafzahlung von " + Nachfrageart_Strafe[nai] + "M...")
				Spieler_Geld[spi] -= Nachfrageart_Strafe[nai]
			else
				call Technik_Echo(Nachfrageart_Name$[nai] + " ist am Ziel angekommen...")
				call Technik_Echo("Praemie von " + gebot + "M erhalten...")
				Spieler_Geld[spi] += gebot
				call Technik_Echo("Erste Raketenstufe bereit zur Landung...")
				if rand > wiederverwendbarkeit then
					call Technik_Echo("Explosion...")
				else
					call Technik_Echo("Landung erfolgreich.")
					call Technik_Echo("Rakete im Wert von " + reuseWert + "M zurueckbekommen...")
					Spieler_Geld[spi] += reuseWert
				endif
			endif
			call Technik_Echo("...an Geld verbleiben also " + Spieler_Geld[spi] + "M.")
			input a$
		endif
	next ni
end subroutine

rem =============================================

subroutine Interaktion_Technologie()
	for spi = 0 to Spieler_Anzahl - 1
		cls
		print "Technologie " + Spieler_Name$[spi]
		print "================================="
		print
		print "Zuverlaessigkeit: Stufe " + Spieler_Zuverlaessigkeit[spi]
		Spieler_Zuverlaessigkeit[spi] += Interaktion_FrageStufenErhoehen(spi)
		print "Wiederverwendbarkeit: Stufe " + Spieler_Wiederverwendbarkeit[spi]
		Spieler_Wiederverwendbarkeit[spi] += Interaktion_FrageStufenErhoehen(spi)
		print "Effizienz: Stufe " + Spieler_Effizienz[spi]
		Spieler_Effizienz[spi] += Interaktion_FrageStufenErhoehen(spi)
	next spi
end subroutine

function Interaktion_FrageStufenErhoehen(spi)
	a = -1
	while a = -1
		input "Wie viel Stufen erhoehen (Geld: " + Spieler_Geld[spi] + "M) ? ", a
		kosten = a * (a + 1) / 2
		if kosten > Spieler_Geld[spi] and a <> 0 then
			print "Kein Geld!"
			a = -1
		else
			Spieler_Geld[spi] -= kosten
		endif
	endwhile
	return a
end function

rem =============================================

subroutine Interaktion_Funding()
	for spi = 0 to Spieler_Anzahl - 1
		Spieler_Geld[spi] += SPIELER_RUNDENGELD
	next spi
end subroutine